openapi: 3.0.1
info:
  description: A REST interface for state queries, transaction generation and broadcasting.
  title: Gaia-Lite for Cosmos
  version: "3.0"
servers:
- url: https://stargate.cosmos.network/
tags:
- description: Search, encode, or broadcast transactions.
  name: Transactions
- description: Tendermint APIs, such as query blocks, transactions and validatorset
  name: Tendermint RPC
- description: Authenticate accounts
  name: Auth
- description: Create and broadcast transactions
  name: Bank
- description: Stake module APIs
  name: Staking
- description: Governance module APIs
  name: Governance
- description: Slashing module APIs
  name: Slashing
- description: Fee distribution module APIs
  name: Distribution
- description: Supply module APIs
  name: Supply
- name: version
- description: Minting module APIs
  name: Mint
- description: Query app version
  name: Misc
paths:
  /node_info:
    get:
      description: Information about the connected node
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
          description: Node status
        "500":
          content: {}
          description: Failed to query node status
      summary: The properties of the connected node
      tags:
      - Tendermint RPC
  /syncing:
    get:
      description: Get if the node is currently syning with other nodes
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_1'
          description: Node syncing status
        "500":
          content: {}
          description: Server internal error
      summary: Syncing state of node
      tags:
      - Tendermint RPC
  /blocks/latest:
    get:
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlockQuery'
          description: The latest block
        "500":
          content: {}
          description: Server internal error
      summary: Get the latest block
      tags:
      - Tendermint RPC
  /blocks/{height}:
    get:
      parameters:
      - description: Block height
        example: 1
        in: path
        name: height
        required: true
        schema:
          type: number
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlockQuery'
          description: The block at a specific height
        "400":
          content: {}
          description: Invalid height
        "404":
          content: {}
          description: Request block height doesn't
        "500":
          content: {}
          description: Server internal error
      summary: Get a block at a certain height
      tags:
      - Tendermint RPC
  /validatorsets/latest:
    get:
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_2'
          description: The validator set at the latest block height
        "500":
          content: {}
          description: Server internal error
      summary: Get the latest validator set
      tags:
      - Tendermint RPC
  /validatorsets/{height}:
    get:
      parameters:
      - description: Block height
        example: 1
        in: path
        name: height
        required: true
        schema:
          type: number
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_2'
          description: The validator set at a specific block height
        "400":
          content: {}
          description: Invalid height
        "404":
          content: {}
          description: Block at height not available
        "500":
          content: {}
          description: Server internal error
      summary: Get a validator set a certain height
      tags:
      - Tendermint RPC
  /txs/{hash}:
    get:
      description: Retrieve a transaction using its hash.
      parameters:
      - description: Tx hash
        example: BCBE20E8D46758B96AE5883B792858296AC06E51435490FBDCAE25A72B3CC76B
        in: path
        name: hash
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TxQuery'
          description: Tx with the provided hash
        "500":
          content: {}
          description: Internal Server Error
      summary: Get a Tx by hash
      tags:
      - Transactions
  /txs:
    get:
      description: Search transactions by events.
      parameters:
      - description: 'transaction events such as ''message.action=send'' which results
          in the following endpoint: ''GET /txs?message.action=send''. note that each
          module documents its own events. look for xx_events.md in the corresponding
          cosmos-sdk/docs/spec directory'
        example: send
        in: query
        name: message.action
        schema:
          type: string
      - description: 'transaction tags with sender: ''GET /txs?message.action=send&message.sender=cosmos16xyempempp92x9hyzz9wrgf94r6j9h5f06pxxv'''
        example: cosmos16xyempempp92x9hyzz9wrgf94r6j9h5f06pxxv
        in: query
        name: message.sender
        schema:
          type: string
      - description: Page number
        example: 1
        in: query
        name: page
        schema:
          type: integer
      - description: Maximum number of items per page
        example: 1
        in: query
        name: limit
        schema:
          type: integer
      - description: transactions on blocks with height greater or equal this value
        example: 25
        in: query
        name: tx.minheight
        schema:
          type: integer
      - description: transactions on blocks with height less than or equal this value
        example: 800000
        in: query
        name: tx.maxheight
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedQueryTxs'
          description: All txs matching the provided events
        "400":
          content: {}
          description: Invalid search events
        "500":
          content: {}
          description: Internal Server Error
      summary: Search transactions
      tags:
      - Transactions
    post:
      description: Broadcast a signed tx to a full node
      requestBody:
        $ref: '#/components/requestBodies/inline_object'
        content:
          application/json:
            schema:
              properties:
                tx:
                  $ref: '#/components/schemas/StdTx'
                mode:
                  example: block
                  type: string
              type: object
        description: The tx must be a signed StdTx. The supported broadcast modes
          include `"block"`(return after tx commit), `"sync"`(return afer CheckTx)
          and `"async"`(return right away).
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BroadcastTxCommitResult'
          description: Tx broadcasting result
        "500":
          content: {}
          description: Internal Server Error
      summary: Broadcast a signed tx
      tags:
      - Transactions
      x-codegen-request-body-name: txBroadcast
  /txs/encode:
    post:
      description: Encode a transaction (signed or not) from JSON to base64-encoded
        Amino serialized bytes
      requestBody:
        $ref: '#/components/requestBodies/inline_object_1'
        content:
          application/json:
            schema:
              properties:
                tx:
                  $ref: '#/components/schemas/StdTx'
              type: object
        description: The tx to encode
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_3'
          description: The tx was successfully decoded and re-encoded
        "400":
          content: {}
          description: The tx was malformated
        "500":
          content: {}
          description: Server internal error
      summary: Encode a transaction to the Amino wire format
      tags:
      - Transactions
      x-codegen-request-body-name: tx
  /txs/decode:
    post:
      description: Decode a transaction (signed or not) from base64-encoded Amino
        serialized bytes to JSON
      requestBody:
        $ref: '#/components/requestBodies/inline_object_2'
        content:
          application/json:
            schema:
              properties:
                tx:
                  example: SvBiXe4KPqijYZoKFFHEzJ8c2HPAfv2EFUcIhx0yPagwEhTy0vPA+GGhCEslKXa4Af0uB+mfShoMCgVzdGFrZRIDMTAwEgQQwJoM
                  type: string
              type: object
        description: The tx to decode
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StdTx'
          description: The tx was successfully decoded
        "400":
          content: {}
          description: The tx was malformated
        "500":
          content: {}
          description: Server internal error
      summary: Decode a transaction from the Amino wire format
      tags:
      - Transactions
      x-codegen-request-body-name: tx
  /bank/balances/{address}:
    get:
      parameters:
      - description: Account address in bech32 format
        example: cosmos16xyempempp92x9hyzz9wrgf94r6j9h5f06pxxv
        in: path
        name: address
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_4'
          description: Account balances
        "500":
          content: {}
          description: Server internal error
      summary: Get the account balances
      tags:
      - Bank
  /bank/accounts/{address}/transfers:
    post:
      parameters:
      - description: Account address in bech32 format
        example: cosmos16xyempempp92x9hyzz9wrgf94r6j9h5f06pxxv
        in: path
        name: address
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_3'
        content:
          application/json:
            schema:
              properties:
                base_req:
                  $ref: '#/components/schemas/BaseReq'
                amount:
                  items:
                    $ref: '#/components/schemas/Coin'
                  type: array
              type: object
        description: The sender and tx information
        required: true
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StdTx'
          description: Tx was succesfully generated
        "400":
          content: {}
          description: Invalid request
        "500":
          content: {}
          description: Server internal error
      summary: Send coins from one account to another
      tags:
      - Bank
      x-codegen-request-body-name: account
  /auth/accounts/{address}:
    get:
      parameters:
      - description: Account address
        example: cosmos16xyempempp92x9hyzz9wrgf94r6j9h5f06pxxv
        in: path
        name: address
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_5'
          description: Account information on the blockchain
        "500":
          content: {}
          description: Server internel error
      summary: Get the account information on blockchain
      tags:
      - Auth
  /staking/delegators/{delegatorAddr}/delegations:
    get:
      parameters:
      - description: Bech32 AccAddress of Delegator
        example: cosmos16xyempempp92x9hyzz9wrgf94r6j9h5f06pxxv
        in: path
        name: delegatorAddr
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Delegation'
                type: array
          description: OK
        "400":
          content: {}
          description: Invalid delegator address
        "500":
          content: {}
          description: Internal Server Error
      summary: Get all delegations from a delegator
      tags:
      - Staking
    post:
      parameters:
      - description: Bech32 AccAddress of Delegator
        in: path
        name: delegatorAddr
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_4'
        content:
          application/json:
            schema:
              properties:
                base_req:
                  $ref: '#/components/schemas/BaseReq'
                delegator_address:
                  description: bech32 encoded address
                  example: cosmos1depk54cuajgkzea6zpgkq36tnjwdzv4afc3d27
                  type: string
                validator_address:
                  description: bech32 encoded address
                  example: cosmosvaloper16xyempempp92x9hyzz9wrgf94r6j9h5f2w4n2l
                  type: string
                delegation:
                  $ref: '#/components/schemas/Coin'
              type: object
        description: The password of the account to remove from the KMS
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BroadcastTxCommitResult'
          description: OK
        "400":
          content: {}
          description: Invalid delegator address or delegation request body
        "401":
          content: {}
          description: Key password is wrong
        "500":
          content: {}
          description: Internal Server Error
      summary: Submit delegation
      tags:
      - Staking
      x-codegen-request-body-name: delegation
  /staking/delegators/{delegatorAddr}/delegations/{validatorAddr}:
    get:
      parameters:
      - description: Bech32 AccAddress of Delegator
        example: cosmos16xyempempp92x9hyzz9wrgf94r6j9h5f06pxxv
        in: path
        name: delegatorAddr
        required: true
        schema:
          type: string
      - description: Bech32 OperatorAddress of validator
        example: cosmosvaloper16xyempempp92x9hyzz9wrgf94r6j9h5f2w4n2l
        in: path
        name: validatorAddr
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Delegation'
          description: OK
        "400":
          content: {}
          description: Invalid delegator address or validator address
        "500":
          content: {}
          description: Internal Server Error
      summary: Query the current delegation between a delegator and a validator
      tags:
      - Staking
  /staking/delegators/{delegatorAddr}/unbonding_delegations:
    get:
      parameters:
      - description: Bech32 AccAddress of Delegator
        example: cosmos16xyempempp92x9hyzz9wrgf94r6j9h5f06pxxv
        in: path
        name: delegatorAddr
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UnbondingDelegation'
                type: array
          description: OK
        "400":
          content: {}
          description: Invalid delegator address
        "500":
          content: {}
          description: Internal Server Error
      summary: Get all unbonding delegations from a delegator
      tags:
      - Staking
    post:
      parameters:
      - description: Bech32 AccAddress of Delegator
        in: path
        name: delegatorAddr
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_5'
        content:
          application/json:
            schema:
              properties:
                base_req:
                  $ref: '#/components/schemas/BaseReq'
                delegator_address:
                  description: bech32 encoded address
                  example: cosmos1depk54cuajgkzea6zpgkq36tnjwdzv4afc3d27
                  type: string
                validator_address:
                  description: bech32 encoded address
                  example: cosmosvaloper16xyempempp92x9hyzz9wrgf94r6j9h5f2w4n2l
                  type: string
                shares:
                  example: "100"
                  type: string
              type: object
        description: The password of the account to remove from the KMS
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BroadcastTxCommitResult'
          description: OK
        "400":
          content: {}
          description: Invalid delegator address or unbonding delegation request body
        "401":
          content: {}
          description: Key password is wrong
        "500":
          content: {}
          description: Internal Server Error
      summary: Submit an unbonding delegation
      tags:
      - Staking
      x-codegen-request-body-name: delegation
  /staking/delegators/{delegatorAddr}/unbonding_delegations/{validatorAddr}:
    get:
      parameters:
      - description: Bech32 AccAddress of Delegator
        example: cosmos16xyempempp92x9hyzz9wrgf94r6j9h5f06pxxv
        in: path
        name: delegatorAddr
        required: true
        schema:
          type: string
      - description: Bech32 OperatorAddress of validator
        example: cosmosvaloper16xyempempp92x9hyzz9wrgf94r6j9h5f2w4n2l
        in: path
        name: validatorAddr
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnbondingDelegationPair'
          description: OK
        "400":
          content: {}
          description: Invalid delegator address or validator address
        "500":
          content: {}
          description: Internal Server Error
      summary: Query all unbonding delegations between a delegator and a validator
      tags:
      - Staking
  /staking/redelegations:
    get:
      parameters:
      - description: Bech32 AccAddress of Delegator
        in: query
        name: delegator
        schema:
          type: string
      - description: Bech32 ValAddress of SrcValidator
        in: query
        name: validator_from
        schema:
          type: string
      - description: Bech32 ValAddress of DstValidator
        in: query
        name: validator_to
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Redelegation'
                type: array
          description: OK
        "500":
          content: {}
          description: Internal Server Error
      summary: Get all redelegations (filter by query params)
      tags:
      - Staking
  /staking/delegators/{delegatorAddr}/redelegations:
    post:
      parameters:
      - description: Bech32 AccAddress of Delegator
        example: cosmos16xyempempp92x9hyzz9wrgf94r6j9h5f06pxxv
        in: path
        name: delegatorAddr
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_6'
        content:
          application/json:
            schema:
              properties:
                base_req:
                  $ref: '#/components/schemas/BaseReq'
                delegator_address:
                  description: bech32 encoded address
                  example: cosmos1depk54cuajgkzea6zpgkq36tnjwdzv4afc3d27
                  type: string
                validator_src_addressess:
                  description: bech32 encoded address
                  example: cosmosvaloper16xyempempp92x9hyzz9wrgf94r6j9h5f2w4n2l
                  type: string
                validator_dst_address:
                  description: bech32 encoded address
                  example: cosmosvaloper16xyempempp92x9hyzz9wrgf94r6j9h5f2w4n2l
                  type: string
                shares:
                  example: "100"
                  type: string
              type: object
        description: The sender and tx information
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StdTx'
          description: Tx was succesfully generated
        "400":
          content: {}
          description: Invalid delegator address or redelegation request body
        "500":
          content: {}
          description: Internal Server Error
      summary: Submit a redelegation
      tags:
      - Staking
      x-codegen-request-body-name: delegation
  /staking/delegators/{delegatorAddr}/validators:
    get:
      parameters:
      - description: Bech32 AccAddress of Delegator
        example: cosmos16xyempempp92x9hyzz9wrgf94r6j9h5f06pxxv
        in: path
        name: delegatorAddr
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Validator'
                type: array
          description: OK
        "400":
          content: {}
          description: Invalid delegator address
        "500":
          content: {}
          description: Internal Server Error
      summary: Query all validators that a delegator is bonded to
      tags:
      - Staking
  /staking/delegators/{delegatorAddr}/validators/{validatorAddr}:
    get:
      parameters:
      - description: Bech32 AccAddress of Delegator
        example: cosmos16xyempempp92x9hyzz9wrgf94r6j9h5f06pxxv
        in: path
        name: delegatorAddr
        required: true
        schema:
          type: string
      - description: Bech32 ValAddress of Delegator
        example: cosmosvaloper16xyempempp92x9hyzz9wrgf94r6j9h5f2w4n2l
        in: path
        name: validatorAddr
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Validator'
          description: OK
        "400":
          content: {}
          description: Invalid delegator address or validator address
        "500":
          content: {}
          description: Internal Server Error
      summary: Query a validator that a delegator is bonded to
      tags:
      - Staking
  /staking/validators:
    get:
      parameters:
      - description: The validator bond status. Must be either 'bonded', 'unbonded',
          or 'unbonding'.
        example: bonded
        in: query
        name: status
        schema:
          type: string
      - description: The page number.
        example: 1
        in: query
        name: page
        schema:
          type: integer
      - description: The maximum number of items per page.
        example: 1
        in: query
        name: limit
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Validator'
                type: array
          description: OK
        "500":
          content: {}
          description: Internal Server Error
      summary: Get all validator candidates. By default it returns only the bonded
        validators.
      tags:
      - Staking
  /staking/validators/{validatorAddr}:
    get:
      parameters:
      - description: Bech32 OperatorAddress of validator
        example: cosmosvaloper16xyempempp92x9hyzz9wrgf94r6j9h5f2w4n2l
        in: path
        name: validatorAddr
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Validator'
          description: OK
        "400":
          content: {}
          description: Invalid validator address
        "500":
          content: {}
          description: Internal Server Error
      summary: Query the information from a single validator
      tags:
      - Staking
  /staking/validators/{validatorAddr}/delegations:
    get:
      parameters:
      - description: Bech32 OperatorAddress of validator
        example: cosmosvaloper16xyempempp92x9hyzz9wrgf94r6j9h5f2w4n2l
        in: path
        name: validatorAddr
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Delegation'
                type: array
          description: OK
        "400":
          content: {}
          description: Invalid validator address
        "500":
          content: {}
          description: Internal Server Error
      summary: Get all delegations from a validator
      tags:
      - Staking
  /staking/validators/{validatorAddr}/unbonding_delegations:
    get:
      parameters:
      - description: Bech32 OperatorAddress of validator
        example: cosmosvaloper16xyempempp92x9hyzz9wrgf94r6j9h5f2w4n2l
        in: path
        name: validatorAddr
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UnbondingDelegation'
                type: array
          description: OK
        "400":
          content: {}
          description: Invalid validator address
        "500":
          content: {}
          description: Internal Server Error
      summary: Get all unbonding delegations from a validator
      tags:
      - Staking
  /staking/pool:
    get:
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_6'
          description: OK
        "500":
          content: {}
          description: Internal Server Error
      summary: Get the current state of the staking pool
      tags:
      - Staking
  /staking/parameters:
    get:
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_7'
          description: OK
        "500":
          content: {}
          description: Internal Server Error
      summary: Get the current staking parameter values
      tags:
      - Staking
  /slashing/signing_infos:
    get:
      description: Get sign info of all validators
      parameters:
      - description: Page number
        example: 1
        in: query
        name: page
        required: true
        schema:
          type: integer
      - description: Maximum number of items per page
        example: 5
        in: query
        name: limit
        required: true
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/SigningInfo'
                type: array
          description: OK
        "400":
          content: {}
          description: Invalid validator public key for one of the validators
        "500":
          content: {}
          description: Internal Server Error
      summary: Get sign info of given all validators
      tags:
      - Slashing
  /slashing/validators/{validatorAddr}/unjail:
    post:
      description: Send transaction to unjail a jailed validator
      parameters:
      - description: Bech32 validator address
        example: cosmosvaloper16xyempempp92x9hyzz9wrgf94r6j9h5f2w4n2l
        in: path
        name: validatorAddr
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_7'
        content:
          application/json:
            schema:
              properties:
                base_req:
                  $ref: '#/components/schemas/StdTx'
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BroadcastTxCommitResult'
          description: Tx was succesfully generated
        "400":
          content: {}
          description: Invalid validator address or base_req
        "500":
          content: {}
          description: Internal Server Error
      summary: Unjail a jailed validator
      tags:
      - Slashing
      x-codegen-request-body-name: UnjailBody
  /slashing/parameters:
    get:
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_8'
          description: OK
        "500":
          content: {}
          description: Internal Server Error
      summary: Get the current slashing parameters
      tags:
      - Slashing
  /gov/proposals:
    get:
      description: Query proposals information with parameters
      parameters:
      - description: voter address
        in: query
        name: voter
        schema:
          type: string
      - description: depositor address
        in: query
        name: depositor
        schema:
          type: string
      - description: proposal status, valid values can be `"deposit_period"`, `"voting_period"`,
          `"passed"`, `"rejected"`
        in: query
        name: status
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/TextProposal'
                type: array
          description: OK
        "400":
          content: {}
          description: Invalid query parameters
        "500":
          content: {}
          description: Internal Server Error
      summary: Query proposals
      tags:
      - Governance
    post:
      description: Send transaction to submit a proposal
      requestBody:
        $ref: '#/components/requestBodies/inline_object_8'
        content:
          application/json:
            schema:
              properties:
                base_req:
                  $ref: '#/components/schemas/BaseReq'
                title:
                  type: string
                description:
                  type: string
                proposal_type:
                  example: text
                  type: string
                proposer:
                  description: bech32 encoded address
                  example: cosmos1depk54cuajgkzea6zpgkq36tnjwdzv4afc3d27
                  type: string
                initial_deposit:
                  items:
                    $ref: '#/components/schemas/Coin'
                  type: array
              type: object
        description: valid value of `"proposal_type"` can be `"text"`, `"parameter_change"`,
          `"software_upgrade"`
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StdTx'
          description: Tx was succesfully generated
        "400":
          content: {}
          description: Invalid proposal body
        "500":
          content: {}
          description: Internal Server Error
      summary: Submit a proposal
      tags:
      - Governance
      x-codegen-request-body-name: post_proposal_body
  /gov/proposals/param_change:
    post:
      description: Generate a parameter change proposal transaction
      requestBody:
        $ref: '#/components/requestBodies/inline_object_9'
        content:
          application/json:
            schema:
              properties:
                base_req:
                  $ref: '#/components/schemas/BaseReq'
                title:
                  type: string
                description:
                  type: string
                proposer:
                  description: bech32 encoded address
                  example: cosmos1depk54cuajgkzea6zpgkq36tnjwdzv4afc3d27
                  type: string
                deposit:
                  items:
                    $ref: '#/components/schemas/Coin'
                  type: array
                changes:
                  items:
                    $ref: '#/components/schemas/ParamChange'
                  type: array
              type: object
        description: The parameter change proposal body that contains all parameter
          changes
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StdTx'
          description: The transaction was succesfully generated
        "400":
          content: {}
          description: Invalid proposal body
        "500":
          content: {}
          description: Internal Server Error
      summary: Generate a parameter change proposal transaction
      tags:
      - Governance
      x-codegen-request-body-name: post_proposal_body
  /gov/proposals/{proposalId}:
    get:
      description: Query a proposal by id
      parameters:
      - example: "2"
        in: path
        name: proposalId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TextProposal'
          description: OK
        "400":
          content: {}
          description: Invalid proposal id
        "500":
          content: {}
          description: Internal Server Error
      summary: Query a proposal
      tags:
      - Governance
  /gov/proposals/{proposalId}/proposer:
    get:
      description: Query for the proposer for a proposal
      parameters:
      - example: "2"
        in: path
        name: proposalId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Proposer'
          description: OK
        "400":
          content: {}
          description: Invalid proposal ID
        "500":
          content: {}
          description: Internal Server Error
      summary: Query proposer
      tags:
      - Governance
  /gov/proposals/{proposalId}/deposits:
    get:
      description: Query deposits by proposalId
      parameters:
      - example: "2"
        in: path
        name: proposalId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Deposit'
                type: array
          description: OK
        "400":
          content: {}
          description: Invalid proposal id
        "500":
          content: {}
          description: Internal Server Error
      summary: Query deposits
      tags:
      - Governance
    post:
      description: Send transaction to deposit tokens to a proposal
      parameters:
      - description: proposal id
        example: "2"
        in: path
        name: proposalId
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_10'
        content:
          application/json:
            schema:
              properties:
                base_req:
                  $ref: '#/components/schemas/BaseReq'
                depositor:
                  description: bech32 encoded address
                  example: cosmos1depk54cuajgkzea6zpgkq36tnjwdzv4afc3d27
                  type: string
                amount:
                  items:
                    $ref: '#/components/schemas/Coin'
                  type: array
              type: object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BroadcastTxCommitResult'
          description: OK
        "400":
          content: {}
          description: Invalid proposal id or deposit body
        "401":
          content: {}
          description: Key password is wrong
        "500":
          content: {}
          description: Internal Server Error
      summary: Deposit tokens to a proposal
      tags:
      - Governance
      x-codegen-request-body-name: post_deposit_body
  /gov/proposals/{proposalId}/deposits/{depositor}:
    get:
      description: Query deposit by proposalId and depositor address
      parameters:
      - description: proposal id
        example: "2"
        in: path
        name: proposalId
        required: true
        schema:
          type: string
      - description: Bech32 depositor address
        example: cosmos16xyempempp92x9hyzz9wrgf94r6j9h5f06pxxv
        in: path
        name: depositor
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Deposit'
          description: OK
        "400":
          content: {}
          description: Invalid proposal id or depositor address
        "404":
          content: {}
          description: Found no deposit
        "500":
          content: {}
          description: Internal Server Error
      summary: Query deposit
      tags:
      - Governance
  /gov/proposals/{proposalId}/votes:
    get:
      description: Query voters information by proposalId
      parameters:
      - description: proposal id
        example: "2"
        in: path
        name: proposalId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Vote'
                type: array
          description: OK
        "400":
          content: {}
          description: Invalid proposal id
        "500":
          content: {}
          description: Internal Server Error
      summary: Query voters
      tags:
      - Governance
    post:
      description: Send transaction to vote a proposal
      parameters:
      - description: proposal id
        example: "2"
        in: path
        name: proposalId
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_11'
        content:
          application/json:
            schema:
              properties:
                base_req:
                  $ref: '#/components/schemas/BaseReq'
                voter:
                  description: bech32 encoded address
                  example: cosmos1depk54cuajgkzea6zpgkq36tnjwdzv4afc3d27
                  type: string
                option:
                  example: "yes"
                  type: string
              type: object
        description: valid value of `"option"` field can be `"yes"`, `"no"`, `"no_with_veto"`
          and `"abstain"`
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BroadcastTxCommitResult'
          description: OK
        "400":
          content: {}
          description: Invalid proposal id or vote body
        "401":
          content: {}
          description: Key password is wrong
        "500":
          content: {}
          description: Internal Server Error
      summary: Vote a proposal
      tags:
      - Governance
      x-codegen-request-body-name: post_vote_body
  /gov/proposals/{proposalId}/votes/{voter}:
    get:
      description: Query vote information by proposal Id and voter address
      parameters:
      - description: proposal id
        example: "2"
        in: path
        name: proposalId
        required: true
        schema:
          type: string
      - description: Bech32 voter address
        example: cosmos16xyempempp92x9hyzz9wrgf94r6j9h5f06pxxv
        in: path
        name: voter
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vote'
          description: OK
        "400":
          content: {}
          description: Invalid proposal id or voter address
        "404":
          content: {}
          description: Found no vote
        "500":
          content: {}
          description: Internal Server Error
      summary: Query vote
      tags:
      - Governance
  /gov/proposals/{proposalId}/tally:
    get:
      description: Gets a proposal's tally result at the current time. If the proposal
        is pending deposits (i.e status 'DepositPeriod') it returns an empty tally
        result.
      parameters:
      - description: proposal id
        example: "2"
        in: path
        name: proposalId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TallyResult'
          description: OK
        "400":
          content: {}
          description: Invalid proposal id
        "500":
          content: {}
          description: Internal Server Error
      summary: Get a proposal's tally result at the current time
      tags:
      - Governance
  /gov/parameters/deposit:
    get:
      description: Query governance deposit parameters. The max_deposit_period units
        are in nanoseconds.
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_9'
          description: OK
        "400":
          content: {}
          description: <other_path> is not a valid query request path
        "404":
          content: {}
          description: Found no deposit parameters
        "500":
          content: {}
          description: Internal Server Error
      summary: Query governance deposit parameters
      tags:
      - Governance
  /gov/parameters/tallying:
    get:
      description: Query governance tally parameters
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: OK
        "400":
          content: {}
          description: <other_path> is not a valid query request path
        "404":
          content: {}
          description: Found no tally parameters
        "500":
          content: {}
          description: Internal Server Error
      summary: Query governance tally parameters
      tags:
      - Governance
  /gov/parameters/voting:
    get:
      description: Query governance voting parameters. The voting_period units are
        in nanoseconds.
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: OK
        "400":
          content: {}
          description: <other_path> is not a valid query request path
        "404":
          content: {}
          description: Found no voting parameters
        "500":
          content: {}
          description: Internal Server Error
      summary: Query governance voting parameters
      tags:
      - Governance
  /distribution/delegators/{delegatorAddr}/rewards:
    get:
      description: Get the sum of all the rewards earned by delegations by a single
        delegator
      parameters:
      - description: Bech32 AccAddress of Delegator
        example: cosmos167w96tdvmazakdwkw2u57227eduula2cy572lf
        in: path
        name: delegatorAddr
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DelegatorTotalRewards'
          description: OK
        "400":
          content: {}
          description: Invalid delegator address
        "500":
          content: {}
          description: Internal Server Error
      summary: Get the total rewards balance from all delegations
      tags:
      - Distribution
    post:
      description: Withdraw all the delegator's delegation rewards
      parameters:
      - description: Bech32 AccAddress of Delegator
        in: path
        name: delegatorAddr
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_12'
        content:
          application/json:
            schema:
              properties:
                base_req:
                  $ref: '#/components/schemas/BaseReq'
              type: object
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BroadcastTxCommitResult'
          description: OK
        "400":
          content: {}
          description: Invalid delegator address
        "401":
          content: {}
          description: Key password is wrong
        "500":
          content: {}
          description: Internal Server Error
      summary: Withdraw all the delegator's delegation rewards
      tags:
      - Distribution
      x-codegen-request-body-name: Withdraw request body
  /distribution/delegators/{delegatorAddr}/rewards/{validatorAddr}:
    get:
      description: Query a single delegation reward by a delegator
      parameters:
      - description: Bech32 AccAddress of Delegator
        example: cosmos16xyempempp92x9hyzz9wrgf94r6j9h5f06pxxv
        in: path
        name: delegatorAddr
        required: true
        schema:
          type: string
      - description: Bech32 OperatorAddress of validator
        example: cosmosvaloper16xyempempp92x9hyzz9wrgf94r6j9h5f2w4n2l
        in: path
        name: validatorAddr
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Coin'
                type: array
          description: OK
        "400":
          content: {}
          description: Invalid delegator address
        "500":
          content: {}
          description: Internal Server Error
      summary: Query a delegation reward
      tags:
      - Distribution
    post:
      description: Withdraw a delegator's delegation reward from a single validator
      parameters:
      - description: Bech32 AccAddress of Delegator
        in: path
        name: delegatorAddr
        required: true
        schema:
          type: string
      - description: Bech32 OperatorAddress of validator
        in: path
        name: validatorAddr
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_13'
        content:
          application/json:
            schema:
              properties:
                base_req:
                  $ref: '#/components/schemas/BaseReq'
              type: object
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BroadcastTxCommitResult'
          description: OK
        "400":
          content: {}
          description: Invalid delegator address or delegation body
        "401":
          content: {}
          description: Key password is wrong
        "500":
          content: {}
          description: Internal Server Error
      summary: Withdraw a delegation reward
      tags:
      - Distribution
      x-codegen-request-body-name: Withdraw request body
  /distribution/delegators/{delegatorAddr}/withdraw_address:
    get:
      description: Get the delegations' rewards withdrawal address. This is the address
        in which the user will receive the reward funds
      parameters:
      - description: Bech32 AccAddress of Delegator
        example: cosmos167w96tdvmazakdwkw2u57227eduula2cy572lf
        in: path
        name: delegatorAddr
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Address'
          description: OK
        "400":
          content: {}
          description: Invalid delegator address
        "500":
          content: {}
          description: Internal Server Error
      summary: Get the rewards withdrawal address
      tags:
      - Distribution
    post:
      description: Replace the delegations' rewards withdrawal address for a new one.
      parameters:
      - description: Bech32 AccAddress of Delegator
        in: path
        name: delegatorAddr
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_14'
        content:
          application/json:
            schema:
              properties:
                base_req:
                  $ref: '#/components/schemas/BaseReq'
                withdraw_address:
                  description: bech32 encoded address
                  example: cosmos1depk54cuajgkzea6zpgkq36tnjwdzv4afc3d27
                  type: string
              type: object
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BroadcastTxCommitResult'
          description: OK
        "400":
          content: {}
          description: Invalid delegator or withdraw address
        "401":
          content: {}
          description: Key password is wrong
        "500":
          content: {}
          description: Internal Server Error
      summary: Replace the rewards withdrawal address
      tags:
      - Distribution
      x-codegen-request-body-name: Withdraw request body
  /distribution/validators/{validatorAddr}:
    get:
      description: Query the distribution information of a single validator
      parameters:
      - description: Bech32 OperatorAddress of validator
        example: cosmosvaloper16xyempempp92x9hyzz9wrgf94r6j9h5f2w4n2l
        in: path
        name: validatorAddr
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidatorDistInfo'
          description: OK
        "400":
          content: {}
          description: Invalid validator address
        "500":
          content: {}
          description: Internal Server Error
      summary: Validator distribution information
      tags:
      - Distribution
  /distribution/validators/{validatorAddr}/outstanding_rewards:
    get:
      parameters:
      - description: Bech32 OperatorAddress of validator
        example: cosmosvaloper16xyempempp92x9hyzz9wrgf94r6j9h5f2w4n2l
        in: path
        name: validatorAddr
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Coin'
                type: array
          description: OK
        "500":
          content: {}
          description: Internal Server Error
      summary: Fee distribution outstanding rewards of a single validator
      tags:
      - Distribution
  /distribution/validators/{validatorAddr}/rewards:
    get:
      description: Query the commission and self-delegation rewards of validator.
      parameters:
      - description: Bech32 OperatorAddress of validator
        example: cosmosvaloper16xyempempp92x9hyzz9wrgf94r6j9h5f2w4n2l
        in: path
        name: validatorAddr
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Coin'
                type: array
          description: OK
        "400":
          content: {}
          description: Invalid validator address
        "500":
          content: {}
          description: Internal Server Error
      summary: Commission and self-delegation rewards of a single validator
      tags:
      - Distribution
    post:
      description: Withdraw the validator's self-delegation and commissions rewards
      parameters:
      - description: Bech32 OperatorAddress of validator
        in: path
        name: validatorAddr
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object_15'
        content:
          application/json:
            schema:
              properties:
                base_req:
                  $ref: '#/components/schemas/BaseReq'
              type: object
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BroadcastTxCommitResult'
          description: OK
        "400":
          content: {}
          description: Invalid validator address
        "401":
          content: {}
          description: Key password is wrong
        "500":
          content: {}
          description: Internal Server Error
      summary: Withdraw the validator's rewards
      tags:
      - Distribution
      x-codegen-request-body-name: Withdraw request body
  /distribution/community_pool:
    get:
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Coin'
                type: array
          description: OK
        "500":
          content: {}
          description: Internal Server Error
      summary: Community pool parameters
      tags:
      - Distribution
  /distribution/parameters:
    get:
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: OK
        "500":
          content: {}
          description: Internal Server Error
      summary: Fee distribution parameters
      tags:
      - Distribution
  /minting/parameters:
    get:
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: OK
        "500":
          content: {}
          description: Internal Server Error
      summary: Minting module parameters
      tags:
      - Mint
  /minting/inflation:
    get:
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: OK
        "500":
          content: {}
          description: Internal Server Error
      summary: Current minting inflation value
      tags:
      - Mint
  /minting/annual-provisions:
    get:
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: OK
        "500":
          content: {}
          description: Internal Server Error
      summary: Current minting annual provisions value
      tags:
      - Mint
  /supply/total:
    get:
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Supply'
          description: OK
        "500":
          content: {}
          description: Internal Server Error
      summary: Total supply of coins in the chain
      tags:
      - Supply
  /supply/total/{denomination}:
    get:
      parameters:
      - description: Coin denomination
        example: uatom
        in: path
        name: denomination
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: OK
        "400":
          content: {}
          description: Invalid coin denomination
        "500":
          content: {}
          description: Internal Server Error
      summary: Total supply of a single coin denomination
      tags:
      - Supply
components:
  requestBodies:
    inline_object_1:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_1'
      required: true
    inline_object_9:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_9'
      required: true
    inline_object_10:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_10'
      required: true
    inline_object_8:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_8'
      required: true
    inline_object_7:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_7'
      required: true
    inline_object_12:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_12'
      required: false
    inline_object_6:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_6'
      required: false
    inline_object_11:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_11'
      required: true
    inline_object_5:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_5'
      required: false
    inline_object_14:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_14'
      required: false
    inline_object_4:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_4'
      required: false
    inline_object_13:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_13'
      required: false
    inline_object_3:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_3'
      required: true
    inline_object_2:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_2'
      required: true
    inline_object_15:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_15'
      required: false
    inline_object:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object'
      required: true
  schemas:
    CheckTxResult:
      example:
        code: 0
        data: data
        log: log
        gas_used: 5000
        gas_wanted: 10000
        info: info
        tags:
        - ""
        - ""
      properties:
        code:
          type: integer
        data:
          type: string
        gas_used:
          type: integer
        gas_wanted:
          type: integer
        info:
          type: string
        log:
          type: string
        tags:
          items:
            $ref: '#/components/schemas/KVPair'
          type: array
      type: object
    DeliverTxResult:
      example:
        code: 5
        data: data
        log: log
        gas_used: 5000
        gas_wanted: 10000
        info: info
        tags:
        - ""
        - ""
      properties:
        code:
          type: integer
        data:
          type: string
        gas_used:
          type: integer
        gas_wanted:
          type: integer
        info:
          type: string
        log:
          type: string
        tags:
          items:
            $ref: '#/components/schemas/KVPair'
          type: array
      type: object
    BroadcastTxCommitResult:
      example:
        check_tx:
          code: 0
          data: data
          log: log
          gas_used: 5000
          gas_wanted: 10000
          info: info
          tags:
          - ""
          - ""
        deliver_tx:
          code: 5
          data: data
          log: log
          gas_used: 5000
          gas_wanted: 10000
          info: info
          tags:
          - ""
          - ""
        hash: EE5F3404034C524501629B56E0DDC38FAD651F04
        height: 0
      properties:
        check_tx:
          $ref: '#/components/schemas/CheckTxResult'
        deliver_tx:
          $ref: '#/components/schemas/DeliverTxResult'
        hash:
          example: EE5F3404034C524501629B56E0DDC38FAD651F04
          type: string
        height:
          type: integer
      type: object
    KVPair:
      example:
        value: value
        key: key
      properties:
        key:
          type: string
        value:
          type: string
      type: object
    Msg:
      type: string
    Address:
      description: bech32 encoded address
      example: cosmos1depk54cuajgkzea6zpgkq36tnjwdzv4afc3d27
      type: string
    ValidatorAddress:
      description: bech32 encoded address
      example: cosmosvaloper16xyempempp92x9hyzz9wrgf94r6j9h5f2w4n2l
      type: string
    Coin:
      example:
        amount: "50"
        denom: stake
      properties:
        denom:
          example: stake
          type: string
        amount:
          example: "50"
          type: string
      type: object
    Hash:
      example: EE5F3404034C524501629B56E0DDC38FAD651F04
      type: string
    TxQuery:
      example:
        result:
          log: log
          gas_used: "26354"
          gas_wanted: "200000"
          tags:
          - value: value
            key: key
          - value: value
            key: key
        tx:
          msg:
          - null
          - null
          signature:
            account_number: "0"
            sequence: "0"
            signature: MEUCIQD02fsDPra8MtbRsyB1w7bqTM55Wu138zQbFcWx4+CFyAIge5WNPfKIuvzBZ69MyqHsqD8S1IwiEp+iUb6VSdtlpgY=
            pub_key:
              type: tendermint/PubKeySecp256k1
              value: Avz04VhtKJh8ACCVzlI8aTosGy0ikFXKIVHQ3jKMrosH
          fee:
            amount:
            - amount: "50"
              denom: stake
            - amount: "50"
              denom: stake
            gas: gas
          memo: memo
        hash: D085138D913993919295FF4B0A9107F1F2CDE0D37A87CE0644E217CBF3B49656
        height: 368.0
      properties:
        hash:
          example: D085138D913993919295FF4B0A9107F1F2CDE0D37A87CE0644E217CBF3B49656
          type: string
        height:
          example: 368.0
          type: number
        tx:
          $ref: '#/components/schemas/StdTx'
        result:
          $ref: '#/components/schemas/TxQuery_result'
      type: object
    PaginatedQueryTxs:
      example:
        page_number: 1.0
        page_total: 1.0
        total_count: 1.0
        count: 1.0
        limit: 30.0
        txs:
        - result:
            log: log
            gas_used: "26354"
            gas_wanted: "200000"
            tags:
            - value: value
              key: key
            - value: value
              key: key
          tx:
            msg:
            - null
            - null
            signature:
              account_number: "0"
              sequence: "0"
              signature: MEUCIQD02fsDPra8MtbRsyB1w7bqTM55Wu138zQbFcWx4+CFyAIge5WNPfKIuvzBZ69MyqHsqD8S1IwiEp+iUb6VSdtlpgY=
              pub_key:
                type: tendermint/PubKeySecp256k1
                value: Avz04VhtKJh8ACCVzlI8aTosGy0ikFXKIVHQ3jKMrosH
            fee:
              amount:
              - amount: "50"
                denom: stake
              - amount: "50"
                denom: stake
              gas: gas
            memo: memo
          hash: D085138D913993919295FF4B0A9107F1F2CDE0D37A87CE0644E217CBF3B49656
          height: 368.0
        - result:
            log: log
            gas_used: "26354"
            gas_wanted: "200000"
            tags:
            - value: value
              key: key
            - value: value
              key: key
          tx:
            msg:
            - null
            - null
            signature:
              account_number: "0"
              sequence: "0"
              signature: MEUCIQD02fsDPra8MtbRsyB1w7bqTM55Wu138zQbFcWx4+CFyAIge5WNPfKIuvzBZ69MyqHsqD8S1IwiEp+iUb6VSdtlpgY=
              pub_key:
                type: tendermint/PubKeySecp256k1
                value: Avz04VhtKJh8ACCVzlI8aTosGy0ikFXKIVHQ3jKMrosH
            fee:
              amount:
              - amount: "50"
                denom: stake
              - amount: "50"
                denom: stake
              gas: gas
            memo: memo
          hash: D085138D913993919295FF4B0A9107F1F2CDE0D37A87CE0644E217CBF3B49656
          height: 368.0
      properties:
        total_count:
          example: 1.0
          type: number
        count:
          example: 1.0
          type: number
        page_number:
          example: 1.0
          type: number
        page_total:
          example: 1.0
          type: number
        limit:
          example: 30.0
          type: number
        txs:
          items:
            $ref: '#/components/schemas/TxQuery'
          type: array
      type: object
    StdTx:
      example:
        msg:
        - null
        - null
        signature:
          account_number: "0"
          sequence: "0"
          signature: MEUCIQD02fsDPra8MtbRsyB1w7bqTM55Wu138zQbFcWx4+CFyAIge5WNPfKIuvzBZ69MyqHsqD8S1IwiEp+iUb6VSdtlpgY=
          pub_key:
            type: tendermint/PubKeySecp256k1
            value: Avz04VhtKJh8ACCVzlI8aTosGy0ikFXKIVHQ3jKMrosH
        fee:
          amount:
          - amount: "50"
            denom: stake
          - amount: "50"
            denom: stake
          gas: gas
        memo: memo
      properties:
        msg:
          items:
            $ref: '#/components/schemas/Msg'
          type: array
        fee:
          $ref: '#/components/schemas/StdTx_fee'
        memo:
          type: string
        signature:
          $ref: '#/components/schemas/StdTx_signature'
      type: object
    BlockID:
      example:
        parts:
          total: 0.0
          hash: EE5F3404034C524501629B56E0DDC38FAD651F04
        hash: EE5F3404034C524501629B56E0DDC38FAD651F04
      properties:
        hash:
          example: EE5F3404034C524501629B56E0DDC38FAD651F04
          type: string
        parts:
          $ref: '#/components/schemas/BlockID_parts'
      type: object
    BlockHeader:
      example:
        validators_hash: EE5F3404034C524501629B56E0DDC38FAD651F04
        chain_id: cosmoshub-2
        consensus_hash: EE5F3404034C524501629B56E0DDC38FAD651F04
        total_txs: 35.0
        proposer_address: cosmos1depk54cuajgkzea6zpgkq36tnjwdzv4afc3d27
        next_validators_hash: EE5F3404034C524501629B56E0DDC38FAD651F04
        version:
          app: "0"
          block: "10"
        data_hash: EE5F3404034C524501629B56E0DDC38FAD651F04
        last_results_hash: EE5F3404034C524501629B56E0DDC38FAD651F04
        last_block_id:
          parts:
            total: 0.0
            hash: EE5F3404034C524501629B56E0DDC38FAD651F04
          hash: EE5F3404034C524501629B56E0DDC38FAD651F04
        evidence_hash: EE5F3404034C524501629B56E0DDC38FAD651F04
        num_txs: 0.0
        app_hash: EE5F3404034C524501629B56E0DDC38FAD651F04
        time: 2017-12-30T05:53:09.287+01:00
        height: 1.0
        last_commit_hash: EE5F3404034C524501629B56E0DDC38FAD651F04
      properties:
        chain_id:
          example: cosmoshub-2
          type: string
        height:
          example: 1.0
          type: number
        time:
          example: 2017-12-30T05:53:09.287+01:00
          type: string
        num_txs:
          example: 0.0
          type: number
        last_block_id:
          $ref: '#/components/schemas/BlockID'
        total_txs:
          example: 35.0
          type: number
        last_commit_hash:
          example: EE5F3404034C524501629B56E0DDC38FAD651F04
          type: string
        data_hash:
          example: EE5F3404034C524501629B56E0DDC38FAD651F04
          type: string
        validators_hash:
          example: EE5F3404034C524501629B56E0DDC38FAD651F04
          type: string
        next_validators_hash:
          example: EE5F3404034C524501629B56E0DDC38FAD651F04
          type: string
        consensus_hash:
          example: EE5F3404034C524501629B56E0DDC38FAD651F04
          type: string
        app_hash:
          example: EE5F3404034C524501629B56E0DDC38FAD651F04
          type: string
        last_results_hash:
          example: EE5F3404034C524501629B56E0DDC38FAD651F04
          type: string
        evidence_hash:
          example: EE5F3404034C524501629B56E0DDC38FAD651F04
          type: string
        proposer_address:
          description: bech32 encoded address
          example: cosmos1depk54cuajgkzea6zpgkq36tnjwdzv4afc3d27
          type: string
        version:
          $ref: '#/components/schemas/BlockHeader_version'
      type: object
    Block:
      example:
        evidence:
        - evidence
        - evidence
        last_commit:
          block_id:
            parts:
              total: 0.0
              hash: EE5F3404034C524501629B56E0DDC38FAD651F04
            hash: EE5F3404034C524501629B56E0DDC38FAD651F04
          precommits:
          - round: "0"
            signature: 7uTC74QlknqYWEwg7Vn6M8Om7FuZ0EO4bjvuj6rwH1mTUJrRuMMZvAAqT9VjNgP0RA/TDp6u/92AqrZfXJSpBQ==
            validator_address: validator_address
            validator_index: "0"
            type: 2.0
            block_id:
              parts:
                total: 0.0
                hash: EE5F3404034C524501629B56E0DDC38FAD651F04
              hash: EE5F3404034C524501629B56E0DDC38FAD651F04
            height: "0"
            timestamp: 2017-12-30T05:53:09.287+01:00
          - round: "0"
            signature: 7uTC74QlknqYWEwg7Vn6M8Om7FuZ0EO4bjvuj6rwH1mTUJrRuMMZvAAqT9VjNgP0RA/TDp6u/92AqrZfXJSpBQ==
            validator_address: validator_address
            validator_index: "0"
            type: 2.0
            block_id:
              parts:
                total: 0.0
                hash: EE5F3404034C524501629B56E0DDC38FAD651F04
              hash: EE5F3404034C524501629B56E0DDC38FAD651F04
            height: "0"
            timestamp: 2017-12-30T05:53:09.287+01:00
        header:
          validators_hash: EE5F3404034C524501629B56E0DDC38FAD651F04
          chain_id: cosmoshub-2
          consensus_hash: EE5F3404034C524501629B56E0DDC38FAD651F04
          total_txs: 35.0
          proposer_address: cosmos1depk54cuajgkzea6zpgkq36tnjwdzv4afc3d27
          next_validators_hash: EE5F3404034C524501629B56E0DDC38FAD651F04
          version:
            app: "0"
            block: "10"
          data_hash: EE5F3404034C524501629B56E0DDC38FAD651F04
          last_results_hash: EE5F3404034C524501629B56E0DDC38FAD651F04
          last_block_id:
            parts:
              total: 0.0
              hash: EE5F3404034C524501629B56E0DDC38FAD651F04
            hash: EE5F3404034C524501629B56E0DDC38FAD651F04
          evidence_hash: EE5F3404034C524501629B56E0DDC38FAD651F04
          num_txs: 0.0
          app_hash: EE5F3404034C524501629B56E0DDC38FAD651F04
          time: 2017-12-30T05:53:09.287+01:00
          height: 1.0
          last_commit_hash: EE5F3404034C524501629B56E0DDC38FAD651F04
        txs:
        - txs
        - txs
      properties:
        header:
          $ref: '#/components/schemas/BlockHeader'
        txs:
          items:
            type: string
          type: array
        evidence:
          items:
            type: string
          type: array
        last_commit:
          $ref: '#/components/schemas/Block_last_commit'
      type: object
    BlockQuery:
      example:
        block:
          evidence:
          - evidence
          - evidence
          last_commit:
            block_id:
              parts:
                total: 0.0
                hash: EE5F3404034C524501629B56E0DDC38FAD651F04
              hash: EE5F3404034C524501629B56E0DDC38FAD651F04
            precommits:
            - round: "0"
              signature: 7uTC74QlknqYWEwg7Vn6M8Om7FuZ0EO4bjvuj6rwH1mTUJrRuMMZvAAqT9VjNgP0RA/TDp6u/92AqrZfXJSpBQ==
              validator_address: validator_address
              validator_index: "0"
              type: 2.0
              block_id:
                parts:
                  total: 0.0
                  hash: EE5F3404034C524501629B56E0DDC38FAD651F04
                hash: EE5F3404034C524501629B56E0DDC38FAD651F04
              height: "0"
              timestamp: 2017-12-30T05:53:09.287+01:00
            - round: "0"
              signature: 7uTC74QlknqYWEwg7Vn6M8Om7FuZ0EO4bjvuj6rwH1mTUJrRuMMZvAAqT9VjNgP0RA/TDp6u/92AqrZfXJSpBQ==
              validator_address: validator_address
              validator_index: "0"
              type: 2.0
              block_id:
                parts:
                  total: 0.0
                  hash: EE5F3404034C524501629B56E0DDC38FAD651F04
                hash: EE5F3404034C524501629B56E0DDC38FAD651F04
              height: "0"
              timestamp: 2017-12-30T05:53:09.287+01:00
          header:
            validators_hash: EE5F3404034C524501629B56E0DDC38FAD651F04
            chain_id: cosmoshub-2
            consensus_hash: EE5F3404034C524501629B56E0DDC38FAD651F04
            total_txs: 35.0
            proposer_address: cosmos1depk54cuajgkzea6zpgkq36tnjwdzv4afc3d27
            next_validators_hash: EE5F3404034C524501629B56E0DDC38FAD651F04
            version:
              app: "0"
              block: "10"
            data_hash: EE5F3404034C524501629B56E0DDC38FAD651F04
            last_results_hash: EE5F3404034C524501629B56E0DDC38FAD651F04
            last_block_id:
              parts:
                total: 0.0
                hash: EE5F3404034C524501629B56E0DDC38FAD651F04
              hash: EE5F3404034C524501629B56E0DDC38FAD651F04
            evidence_hash: EE5F3404034C524501629B56E0DDC38FAD651F04
            num_txs: 0.0
            app_hash: EE5F3404034C524501629B56E0DDC38FAD651F04
            time: 2017-12-30T05:53:09.287+01:00
            height: 1.0
            last_commit_hash: EE5F3404034C524501629B56E0DDC38FAD651F04
          txs:
          - txs
          - txs
        block_meta:
          header:
            validators_hash: EE5F3404034C524501629B56E0DDC38FAD651F04
            chain_id: cosmoshub-2
            consensus_hash: EE5F3404034C524501629B56E0DDC38FAD651F04
            total_txs: 35.0
            proposer_address: cosmos1depk54cuajgkzea6zpgkq36tnjwdzv4afc3d27
            next_validators_hash: EE5F3404034C524501629B56E0DDC38FAD651F04
            version:
              app: "0"
              block: "10"
            data_hash: EE5F3404034C524501629B56E0DDC38FAD651F04
            last_results_hash: EE5F3404034C524501629B56E0DDC38FAD651F04
            last_block_id:
              parts:
                total: 0.0
                hash: EE5F3404034C524501629B56E0DDC38FAD651F04
              hash: EE5F3404034C524501629B56E0DDC38FAD651F04
            evidence_hash: EE5F3404034C524501629B56E0DDC38FAD651F04
            num_txs: 0.0
            app_hash: EE5F3404034C524501629B56E0DDC38FAD651F04
            time: 2017-12-30T05:53:09.287+01:00
            height: 1.0
            last_commit_hash: EE5F3404034C524501629B56E0DDC38FAD651F04
          block_id:
            parts:
              total: 0.0
              hash: EE5F3404034C524501629B56E0DDC38FAD651F04
            hash: EE5F3404034C524501629B56E0DDC38FAD651F04
      properties:
        block_meta:
          $ref: '#/components/schemas/BlockQuery_block_meta'
        block:
          $ref: '#/components/schemas/Block'
      type: object
    DelegationDelegatorReward:
      example:
        reward:
        - amount: "50"
          denom: stake
        - amount: "50"
          denom: stake
        validator_address: cosmosvaloper16xyempempp92x9hyzz9wrgf94r6j9h5f2w4n2l
      properties:
        validator_address:
          description: bech32 encoded address
          example: cosmosvaloper16xyempempp92x9hyzz9wrgf94r6j9h5f2w4n2l
          type: string
        reward:
          items:
            $ref: '#/components/schemas/Coin'
          type: array
      type: object
    DelegatorTotalRewards:
      example:
        total:
        - amount: "50"
          denom: stake
        - amount: "50"
          denom: stake
        rewards:
        - reward:
          - amount: "50"
            denom: stake
          - amount: "50"
            denom: stake
          validator_address: cosmosvaloper16xyempempp92x9hyzz9wrgf94r6j9h5f2w4n2l
        - reward:
          - amount: "50"
            denom: stake
          - amount: "50"
            denom: stake
          validator_address: cosmosvaloper16xyempempp92x9hyzz9wrgf94r6j9h5f2w4n2l
      properties:
        rewards:
          items:
            $ref: '#/components/schemas/DelegationDelegatorReward'
          type: array
        total:
          items:
            $ref: '#/components/schemas/Coin'
          type: array
      type: object
    BaseReq:
      properties:
        from:
          description: Sender address or Keybase name to generate a transaction
          example: cosmos1g9ahr6xhht5rmqven628nklxluzyv8z9jqjcmc
          type: string
        memo:
          example: Sent via Cosmos Voyager 🚀
          type: string
        chain_id:
          example: Cosmos-Hub
          type: string
        account_number:
          example: "0"
          type: string
        sequence:
          example: "1"
          type: string
        gas:
          example: "200000"
          type: string
        gas_adjustment:
          example: "1.2"
          type: string
        fees:
          items:
            $ref: '#/components/schemas/Coin'
          type: array
        simulate:
          description: Estimate gas for a transaction (cannot be used in conjunction
            with generate_only)
          example: false
          type: boolean
      type: object
    TendermintValidator:
      example:
        address: cosmosvaloper16xyempempp92x9hyzz9wrgf94r6j9h5f2w4n2l
        proposer_priority: "1000"
        pub_key: cosmosvalconspub1zcjduepq0vu2zgkgk49efa0nqwzndanq5m4c7pa3u4apz4g2r9gspqg6g9cs3k9cuf
        voting_power: "1000"
      properties:
        address:
          description: bech32 encoded address
          example: cosmosvaloper16xyempempp92x9hyzz9wrgf94r6j9h5f2w4n2l
          type: string
        pub_key:
          example: cosmosvalconspub1zcjduepq0vu2zgkgk49efa0nqwzndanq5m4c7pa3u4apz4g2r9gspqg6g9cs3k9cuf
          type: string
        voting_power:
          example: "1000"
          type: string
        proposer_priority:
          example: "1000"
          type: string
      type: object
    TextProposal:
      example:
        proposal_type: proposal_type
        proposal_status: proposal_status
        final_tally_result:
          "no": "0.0000000000"
          no_with_veto: "0.0000000000"
          "yes": "0.0000000000"
          abstain: "0.0000000000"
        total_deposit:
        - amount: "50"
          denom: stake
        - amount: "50"
          denom: stake
        proposal_id: 0
        submit_time: submit_time
        description: description
        title: title
        voting_start_time: voting_start_time
      properties:
        proposal_id:
          type: integer
        title:
          type: string
        description:
          type: string
        proposal_type:
          type: string
        proposal_status:
          type: string
        final_tally_result:
          $ref: '#/components/schemas/TallyResult'
        submit_time:
          type: string
        total_deposit:
          items:
            $ref: '#/components/schemas/Coin'
          type: array
        voting_start_time:
          type: string
      type: object
    Proposer:
      example:
        proposal_id: proposal_id
        proposer: proposer
      properties:
        proposal_id:
          type: string
        proposer:
          type: string
      type: object
    Deposit:
      example:
        amount:
        - amount: "50"
          denom: stake
        - amount: "50"
          denom: stake
        proposal_id: proposal_id
        depositor: cosmos1depk54cuajgkzea6zpgkq36tnjwdzv4afc3d27
      properties:
        amount:
          items:
            $ref: '#/components/schemas/Coin'
          type: array
        proposal_id:
          type: string
        depositor:
          description: bech32 encoded address
          example: cosmos1depk54cuajgkzea6zpgkq36tnjwdzv4afc3d27
          type: string
      type: object
    TallyResult:
      example:
        "no": "0.0000000000"
        no_with_veto: "0.0000000000"
        "yes": "0.0000000000"
        abstain: "0.0000000000"
      properties:
        "yes":
          example: "0.0000000000"
          type: string
        abstain:
          example: "0.0000000000"
          type: string
        "no":
          example: "0.0000000000"
          type: string
        no_with_veto:
          example: "0.0000000000"
          type: string
      type: object
    Vote:
      example:
        proposal_id: proposal_id
        voter: voter
        option: option
      properties:
        voter:
          type: string
        proposal_id:
          type: string
        option:
          type: string
      type: object
    Validator:
      example:
        jailed: true
        consensus_pubkey: cosmosvalconspub1zcjduepq0vu2zgkgk49efa0nqwzndanq5m4c7pa3u4apz4g2r9gspqg6g9cs3k9cuf
        bond_intra_tx_counter: 0
        operator_address: cosmosvaloper16xyempempp92x9hyzz9wrgf94r6j9h5f2w4n2l
        description:
          website: website
          identity: identity
          details: details
          moniker: moniker
          security_contact: security_contact
        bond_height: "0"
        tokens: tokens
        commission:
          update_time: 1970-01-01T00:00:00Z
          rate: "0"
          max_rate: "0"
          max_change_rate: "0"
        unbonding_height: "0"
        delegator_shares: delegator_shares
        unbonding_time: 1970-01-01T00:00:00Z
        status: 0
      properties:
        operator_address:
          description: bech32 encoded address
          example: cosmosvaloper16xyempempp92x9hyzz9wrgf94r6j9h5f2w4n2l
          type: string
        consensus_pubkey:
          example: cosmosvalconspub1zcjduepq0vu2zgkgk49efa0nqwzndanq5m4c7pa3u4apz4g2r9gspqg6g9cs3k9cuf
          type: string
        jailed:
          type: boolean
        status:
          type: integer
        tokens:
          type: string
        delegator_shares:
          type: string
        description:
          $ref: '#/components/schemas/Validator_description'
        bond_height:
          example: "0"
          type: string
        bond_intra_tx_counter:
          example: 0
          type: integer
        unbonding_height:
          example: "0"
          type: string
        unbonding_time:
          example: 1970-01-01T00:00:00Z
          type: string
        commission:
          $ref: '#/components/schemas/Validator_commission'
      type: object
    Delegation:
      example:
        shares: shares
        delegator_address: delegator_address
        balance:
          amount: "50"
          denom: stake
        validator_address: validator_address
      properties:
        delegator_address:
          type: string
        validator_address:
          type: string
        shares:
          type: string
        balance:
          $ref: '#/components/schemas/Coin'
      type: object
    UnbondingDelegationPair:
      example:
        delegator_address: delegator_address
        entries:
        - creation_height: creation_height
          balance: balance
          initial_balance: initial_balance
          min_time: min_time
        - creation_height: creation_height
          balance: balance
          initial_balance: initial_balance
          min_time: min_time
        validator_address: validator_address
      properties:
        delegator_address:
          type: string
        validator_address:
          type: string
        entries:
          items:
            $ref: '#/components/schemas/UnbondingEntries'
          type: array
      type: object
    UnbondingEntries:
      example:
        creation_height: creation_height
        balance: balance
        initial_balance: initial_balance
        min_time: min_time
      properties:
        initial_balance:
          type: string
        balance:
          type: string
        creation_height:
          type: string
        min_time:
          type: string
      type: object
    UnbondingDelegation:
      example:
        delegator_address: delegator_address
        creation_height: 0
        balance: balance
        validator_address: validator_address
        initial_balance: initial_balance
        min_time: 6
      properties:
        delegator_address:
          type: string
        validator_address:
          type: string
        initial_balance:
          type: string
        balance:
          type: string
        creation_height:
          type: integer
        min_time:
          type: integer
      type: object
    Redelegation:
      example:
        delegator_address: delegator_address
        entries:
        - null
        - null
        validator_src_address: validator_src_address
        validator_dst_address: validator_dst_address
      properties:
        delegator_address:
          type: string
        validator_src_address:
          type: string
        validator_dst_address:
          type: string
        entries:
          items:
            $ref: '#/components/schemas/Redelegation'
          type: array
      type: object
    RedelegationEntry:
      properties:
        creation_height:
          type: integer
        completion_time:
          type: integer
        initial_balance:
          type: string
        balance:
          type: string
        shares_dst:
          type: string
      type: object
    ValidatorDistInfo:
      example:
        self_bond_rewards:
        - amount: "50"
          denom: stake
        - amount: "50"
          denom: stake
        val_commission:
        - amount: "50"
          denom: stake
        - amount: "50"
          denom: stake
        operator_address: cosmosvaloper16xyempempp92x9hyzz9wrgf94r6j9h5f2w4n2l
      properties:
        operator_address:
          description: bech32 encoded address
          example: cosmosvaloper16xyempempp92x9hyzz9wrgf94r6j9h5f2w4n2l
          type: string
        self_bond_rewards:
          items:
            $ref: '#/components/schemas/Coin'
          type: array
        val_commission:
          items:
            $ref: '#/components/schemas/Coin'
          type: array
      type: object
    PublicKey:
      example:
        type: type
        value: value
      properties:
        type:
          type: string
        value:
          type: string
      type: object
    SigningInfo:
      example:
        jailed_until: jailed_until
        index_offset: index_offset
        start_height: start_height
        missed_blocks_counter: missed_blocks_counter
      properties:
        start_height:
          type: string
        index_offset:
          type: string
        jailed_until:
          type: string
        missed_blocks_counter:
          type: string
      type: object
    ParamChange:
      properties:
        subspace:
          example: staking
          type: string
        key:
          example: MaxValidators
          type: string
        subkey:
          example: ""
          type: string
        value:
          properties: {}
          type: object
      type: object
    Supply:
      example:
        total:
        - amount: "50"
          denom: stake
        - amount: "50"
          denom: stake
      properties:
        total:
          items:
            $ref: '#/components/schemas/Coin'
          type: array
      type: object
    inline_response_200_application_version:
      example:
        server_name: server_name
        commit: commit
        go: go
        name: name
        client_name: client_name
        version: version
        build_tags: build_tags
      properties:
        build_tags:
          type: string
        client_name:
          type: string
        commit:
          type: string
        go:
          type: string
        name:
          type: string
        server_name:
          type: string
        version:
          type: string
    inline_response_200_node_info_protocol_version:
      example:
        app: "0"
        block: "10"
        p2p: "7"
      properties:
        p2p:
          example: "7"
          type: string
        block:
          example: "10"
          type: string
        app:
          example: "0"
          type: string
    inline_response_200_node_info_other:
      description: more information on versions
      example:
        tx_index: "true"
        rpc_address: tcp://0.0.0.0:26657
      properties:
        tx_index:
          example: "true"
          type: string
        rpc_address:
          example: tcp://0.0.0.0:26657
          type: string
    inline_response_200_node_info:
      example:
        protocol_version:
          app: "0"
          block: "10"
          p2p: "7"
        other:
          tx_index: "true"
          rpc_address: tcp://0.0.0.0:26657
        channels: channels
        listen_addr: 192.168.56.1:26656
        id: id
        moniker: validator-name
        version: 0.15.0
        network: gaia-2
      properties:
        id:
          type: string
        moniker:
          example: validator-name
          type: string
        protocol_version:
          $ref: '#/components/schemas/inline_response_200_node_info_protocol_version'
        network:
          example: gaia-2
          type: string
        channels:
          type: string
        listen_addr:
          example: 192.168.56.1:26656
          type: string
        version:
          description: Tendermint version
          example: 0.15.0
          type: string
        other:
          $ref: '#/components/schemas/inline_response_200_node_info_other'
    inline_response_200:
      example:
        node_info:
          protocol_version:
            app: "0"
            block: "10"
            p2p: "7"
          other:
            tx_index: "true"
            rpc_address: tcp://0.0.0.0:26657
          channels: channels
          listen_addr: 192.168.56.1:26656
          id: id
          moniker: validator-name
          version: 0.15.0
          network: gaia-2
        application_version:
          server_name: server_name
          commit: commit
          go: go
          name: name
          client_name: client_name
          version: version
          build_tags: build_tags
      properties:
        application_version:
          $ref: '#/components/schemas/inline_response_200_application_version'
        node_info:
          $ref: '#/components/schemas/inline_response_200_node_info'
    inline_response_200_1:
      example:
        syncing: true
      properties:
        syncing:
          type: boolean
    inline_response_200_2:
      example:
        validators:
        - address: cosmosvaloper16xyempempp92x9hyzz9wrgf94r6j9h5f2w4n2l
          proposer_priority: "1000"
          pub_key: cosmosvalconspub1zcjduepq0vu2zgkgk49efa0nqwzndanq5m4c7pa3u4apz4g2r9gspqg6g9cs3k9cuf
          voting_power: "1000"
        - address: cosmosvaloper16xyempempp92x9hyzz9wrgf94r6j9h5f2w4n2l
          proposer_priority: "1000"
          pub_key: cosmosvalconspub1zcjduepq0vu2zgkgk49efa0nqwzndanq5m4c7pa3u4apz4g2r9gspqg6g9cs3k9cuf
          voting_power: "1000"
        block_height: block_height
      properties:
        block_height:
          type: string
        validators:
          items:
            $ref: '#/components/schemas/TendermintValidator'
          type: array
    inline_object:
      properties:
        tx:
          $ref: '#/components/schemas/StdTx'
        mode:
          example: block
          type: string
      type: object
    inline_object_1:
      properties:
        tx:
          $ref: '#/components/schemas/StdTx'
      type: object
    inline_response_200_3:
      example:
        tx: The base64-encoded Amino-serialized bytes for the tx
      properties:
        tx:
          example: The base64-encoded Amino-serialized bytes for the tx
          type: string
    inline_object_2:
      properties:
        tx:
          example: SvBiXe4KPqijYZoKFFHEzJ8c2HPAfv2EFUcIhx0yPagwEhTy0vPA+GGhCEslKXa4Af0uB+mfShoMCgVzdGFrZRIDMTAwEgQQwJoM
          type: string
      type: object
    inline_response_200_4:
      example:
        result:
        - amount: "50"
          denom: stake
        - amount: "50"
          denom: stake
        height: height
      properties:
        height:
          type: string
        result:
          items:
            $ref: '#/components/schemas/Coin'
          type: array
    inline_object_3:
      properties:
        base_req:
          $ref: '#/components/schemas/BaseReq'
        amount:
          items:
            $ref: '#/components/schemas/Coin'
          type: array
      type: object
    inline_response_200_5_value:
      example:
        public_key:
          type: type
          value: value
        account_number: account_number
        sequence: sequence
        address: address
        coins:
        - amount: "50"
          denom: stake
        - amount: "50"
          denom: stake
      properties:
        account_number:
          type: string
        address:
          type: string
        coins:
          items:
            $ref: '#/components/schemas/Coin'
          type: array
        public_key:
          $ref: '#/components/schemas/PublicKey'
        sequence:
          type: string
    inline_response_200_5:
      example:
        type: type
        value:
          public_key:
            type: type
            value: value
          account_number: account_number
          sequence: sequence
          address: address
          coins:
          - amount: "50"
            denom: stake
          - amount: "50"
            denom: stake
      properties:
        type:
          type: string
        value:
          $ref: '#/components/schemas/inline_response_200_5_value'
    inline_object_4:
      properties:
        base_req:
          $ref: '#/components/schemas/BaseReq'
        delegator_address:
          description: bech32 encoded address
          example: cosmos1depk54cuajgkzea6zpgkq36tnjwdzv4afc3d27
          type: string
        validator_address:
          description: bech32 encoded address
          example: cosmosvaloper16xyempempp92x9hyzz9wrgf94r6j9h5f2w4n2l
          type: string
        delegation:
          $ref: '#/components/schemas/Coin'
      type: object
    inline_object_5:
      properties:
        base_req:
          $ref: '#/components/schemas/BaseReq'
        delegator_address:
          description: bech32 encoded address
          example: cosmos1depk54cuajgkzea6zpgkq36tnjwdzv4afc3d27
          type: string
        validator_address:
          description: bech32 encoded address
          example: cosmosvaloper16xyempempp92x9hyzz9wrgf94r6j9h5f2w4n2l
          type: string
        shares:
          example: "100"
          type: string
      type: object
    inline_object_6:
      properties:
        base_req:
          $ref: '#/components/schemas/BaseReq'
        delegator_address:
          description: bech32 encoded address
          example: cosmos1depk54cuajgkzea6zpgkq36tnjwdzv4afc3d27
          type: string
        validator_src_addressess:
          description: bech32 encoded address
          example: cosmosvaloper16xyempempp92x9hyzz9wrgf94r6j9h5f2w4n2l
          type: string
        validator_dst_address:
          description: bech32 encoded address
          example: cosmosvaloper16xyempempp92x9hyzz9wrgf94r6j9h5f2w4n2l
          type: string
        shares:
          example: "100"
          type: string
      type: object
    inline_response_200_6:
      example:
        loose_tokens: loose_tokens
        prev_bonded_shares: prev_bonded_shares
        inflation_last_time: inflation_last_time
        date_last_commission_reset: date_last_commission_reset
        bonded_tokens: bonded_tokens
        inflation: inflation
      properties:
        loose_tokens:
          type: string
        bonded_tokens:
          type: string
        inflation_last_time:
          type: string
        inflation:
          type: string
        date_last_commission_reset:
          type: string
        prev_bonded_shares:
          type: string
    inline_response_200_7:
      example:
        inflation_rate_change: inflation_rate_change
        max_validators: 0
        inflation_max: inflation_max
        bond_denom: bond_denom
        inflation_min: inflation_min
        goal_bonded: goal_bonded
        unbonding_time: unbonding_time
      properties:
        inflation_rate_change:
          type: string
        inflation_max:
          type: string
        inflation_min:
          type: string
        goal_bonded:
          type: string
        unbonding_time:
          type: string
        max_validators:
          type: integer
        bond_denom:
          type: string
    inline_object_7:
      properties:
        base_req:
          $ref: '#/components/schemas/StdTx'
      type: object
    inline_response_200_8:
      example:
        min_signed_per_window: min_signed_per_window
        slash_fraction_downtime: slash_fraction_downtime
        slash_fraction_double_sign: slash_fraction_double_sign
        double_sign_unbond_duration: double_sign_unbond_duration
        signed_blocks_window: signed_blocks_window
        downtime_unbond_duration: downtime_unbond_duration
        max_evidence_age: max_evidence_age
      properties:
        max_evidence_age:
          type: string
        signed_blocks_window:
          type: string
        min_signed_per_window:
          type: string
        double_sign_unbond_duration:
          type: string
        downtime_unbond_duration:
          type: string
        slash_fraction_double_sign:
          type: string
        slash_fraction_downtime:
          type: string
    inline_object_8:
      properties:
        base_req:
          $ref: '#/components/schemas/BaseReq'
        title:
          type: string
        description:
          type: string
        proposal_type:
          example: text
          type: string
        proposer:
          description: bech32 encoded address
          example: cosmos1depk54cuajgkzea6zpgkq36tnjwdzv4afc3d27
          type: string
        initial_deposit:
          items:
            $ref: '#/components/schemas/Coin'
          type: array
      type: object
    inline_object_9:
      properties:
        base_req:
          $ref: '#/components/schemas/BaseReq'
        title:
          type: string
        description:
          type: string
        proposer:
          description: bech32 encoded address
          example: cosmos1depk54cuajgkzea6zpgkq36tnjwdzv4afc3d27
          type: string
        deposit:
          items:
            $ref: '#/components/schemas/Coin'
          type: array
        changes:
          items:
            $ref: '#/components/schemas/ParamChange'
          type: array
      type: object
    inline_object_10:
      properties:
        base_req:
          $ref: '#/components/schemas/BaseReq'
        depositor:
          description: bech32 encoded address
          example: cosmos1depk54cuajgkzea6zpgkq36tnjwdzv4afc3d27
          type: string
        amount:
          items:
            $ref: '#/components/schemas/Coin'
          type: array
      type: object
    inline_object_11:
      properties:
        base_req:
          $ref: '#/components/schemas/BaseReq'
        voter:
          description: bech32 encoded address
          example: cosmos1depk54cuajgkzea6zpgkq36tnjwdzv4afc3d27
          type: string
        option:
          example: "yes"
          type: string
      type: object
    inline_response_200_9:
      example:
        max_deposit_period: "86400000000000"
        min_deposit:
        - amount: "50"
          denom: stake
        - amount: "50"
          denom: stake
      properties:
        min_deposit:
          items:
            $ref: '#/components/schemas/Coin'
          type: array
        max_deposit_period:
          example: "86400000000000"
          type: string
    inline_object_12:
      properties:
        base_req:
          $ref: '#/components/schemas/BaseReq'
      type: object
    inline_object_13:
      properties:
        base_req:
          $ref: '#/components/schemas/BaseReq'
      type: object
    inline_object_14:
      properties:
        base_req:
          $ref: '#/components/schemas/BaseReq'
        withdraw_address:
          description: bech32 encoded address
          example: cosmos1depk54cuajgkzea6zpgkq36tnjwdzv4afc3d27
          type: string
      type: object
    inline_object_15:
      properties:
        base_req:
          $ref: '#/components/schemas/BaseReq'
      type: object
    TxQuery_result:
      example:
        log: log
        gas_used: "26354"
        gas_wanted: "200000"
        tags:
        - value: value
          key: key
        - value: value
          key: key
      properties:
        log:
          type: string
        gas_wanted:
          example: "200000"
          type: string
        gas_used:
          example: "26354"
          type: string
        tags:
          items:
            $ref: '#/components/schemas/KVPair'
          type: array
    StdTx_fee:
      example:
        amount:
        - amount: "50"
          denom: stake
        - amount: "50"
          denom: stake
        gas: gas
      properties:
        gas:
          type: string
        amount:
          items:
            $ref: '#/components/schemas/Coin'
          type: array
    StdTx_signature_pub_key:
      example:
        type: tendermint/PubKeySecp256k1
        value: Avz04VhtKJh8ACCVzlI8aTosGy0ikFXKIVHQ3jKMrosH
      properties:
        type:
          example: tendermint/PubKeySecp256k1
          type: string
        value:
          example: Avz04VhtKJh8ACCVzlI8aTosGy0ikFXKIVHQ3jKMrosH
          type: string
    StdTx_signature:
      example:
        account_number: "0"
        sequence: "0"
        signature: MEUCIQD02fsDPra8MtbRsyB1w7bqTM55Wu138zQbFcWx4+CFyAIge5WNPfKIuvzBZ69MyqHsqD8S1IwiEp+iUb6VSdtlpgY=
        pub_key:
          type: tendermint/PubKeySecp256k1
          value: Avz04VhtKJh8ACCVzlI8aTosGy0ikFXKIVHQ3jKMrosH
      properties:
        signature:
          example: MEUCIQD02fsDPra8MtbRsyB1w7bqTM55Wu138zQbFcWx4+CFyAIge5WNPfKIuvzBZ69MyqHsqD8S1IwiEp+iUb6VSdtlpgY=
          type: string
        pub_key:
          $ref: '#/components/schemas/StdTx_signature_pub_key'
        account_number:
          example: "0"
          type: string
        sequence:
          example: "0"
          type: string
    BlockID_parts:
      example:
        total: 0.0
        hash: EE5F3404034C524501629B56E0DDC38FAD651F04
      properties:
        total:
          example: 0.0
          type: number
        hash:
          example: EE5F3404034C524501629B56E0DDC38FAD651F04
          type: string
    BlockHeader_version:
      example:
        app: "0"
        block: "10"
      properties:
        block:
          example: "10"
          type: string
        app:
          example: "0"
          type: string
    Block_last_commit_precommits:
      example:
        round: "0"
        signature: 7uTC74QlknqYWEwg7Vn6M8Om7FuZ0EO4bjvuj6rwH1mTUJrRuMMZvAAqT9VjNgP0RA/TDp6u/92AqrZfXJSpBQ==
        validator_address: validator_address
        validator_index: "0"
        type: 2.0
        block_id:
          parts:
            total: 0.0
            hash: EE5F3404034C524501629B56E0DDC38FAD651F04
          hash: EE5F3404034C524501629B56E0DDC38FAD651F04
        height: "0"
        timestamp: 2017-12-30T05:53:09.287+01:00
      properties:
        validator_address:
          type: string
        validator_index:
          example: "0"
          type: string
        height:
          example: "0"
          type: string
        round:
          example: "0"
          type: string
        timestamp:
          example: 2017-12-30T05:53:09.287+01:00
          type: string
        type:
          example: 2.0
          type: number
        block_id:
          $ref: '#/components/schemas/BlockID'
        signature:
          example: 7uTC74QlknqYWEwg7Vn6M8Om7FuZ0EO4bjvuj6rwH1mTUJrRuMMZvAAqT9VjNgP0RA/TDp6u/92AqrZfXJSpBQ==
          type: string
    Block_last_commit:
      example:
        block_id:
          parts:
            total: 0.0
            hash: EE5F3404034C524501629B56E0DDC38FAD651F04
          hash: EE5F3404034C524501629B56E0DDC38FAD651F04
        precommits:
        - round: "0"
          signature: 7uTC74QlknqYWEwg7Vn6M8Om7FuZ0EO4bjvuj6rwH1mTUJrRuMMZvAAqT9VjNgP0RA/TDp6u/92AqrZfXJSpBQ==
          validator_address: validator_address
          validator_index: "0"
          type: 2.0
          block_id:
            parts:
              total: 0.0
              hash: EE5F3404034C524501629B56E0DDC38FAD651F04
            hash: EE5F3404034C524501629B56E0DDC38FAD651F04
          height: "0"
          timestamp: 2017-12-30T05:53:09.287+01:00
        - round: "0"
          signature: 7uTC74QlknqYWEwg7Vn6M8Om7FuZ0EO4bjvuj6rwH1mTUJrRuMMZvAAqT9VjNgP0RA/TDp6u/92AqrZfXJSpBQ==
          validator_address: validator_address
          validator_index: "0"
          type: 2.0
          block_id:
            parts:
              total: 0.0
              hash: EE5F3404034C524501629B56E0DDC38FAD651F04
            hash: EE5F3404034C524501629B56E0DDC38FAD651F04
          height: "0"
          timestamp: 2017-12-30T05:53:09.287+01:00
      properties:
        block_id:
          $ref: '#/components/schemas/BlockID'
        precommits:
          items:
            $ref: '#/components/schemas/Block_last_commit_precommits'
          type: array
    BlockQuery_block_meta:
      example:
        header:
          validators_hash: EE5F3404034C524501629B56E0DDC38FAD651F04
          chain_id: cosmoshub-2
          consensus_hash: EE5F3404034C524501629B56E0DDC38FAD651F04
          total_txs: 35.0
          proposer_address: cosmos1depk54cuajgkzea6zpgkq36tnjwdzv4afc3d27
          next_validators_hash: EE5F3404034C524501629B56E0DDC38FAD651F04
          version:
            app: "0"
            block: "10"
          data_hash: EE5F3404034C524501629B56E0DDC38FAD651F04
          last_results_hash: EE5F3404034C524501629B56E0DDC38FAD651F04
          last_block_id:
            parts:
              total: 0.0
              hash: EE5F3404034C524501629B56E0DDC38FAD651F04
            hash: EE5F3404034C524501629B56E0DDC38FAD651F04
          evidence_hash: EE5F3404034C524501629B56E0DDC38FAD651F04
          num_txs: 0.0
          app_hash: EE5F3404034C524501629B56E0DDC38FAD651F04
          time: 2017-12-30T05:53:09.287+01:00
          height: 1.0
          last_commit_hash: EE5F3404034C524501629B56E0DDC38FAD651F04
        block_id:
          parts:
            total: 0.0
            hash: EE5F3404034C524501629B56E0DDC38FAD651F04
          hash: EE5F3404034C524501629B56E0DDC38FAD651F04
      properties:
        header:
          $ref: '#/components/schemas/BlockHeader'
        block_id:
          $ref: '#/components/schemas/BlockID'
    Validator_description:
      example:
        website: website
        identity: identity
        details: details
        moniker: moniker
        security_contact: security_contact
      properties:
        moniker:
          type: string
        identity:
          type: string
        website:
          type: string
        security_contact:
          type: string
        details:
          type: string
    Validator_commission:
      example:
        update_time: 1970-01-01T00:00:00Z
        rate: "0"
        max_rate: "0"
        max_change_rate: "0"
      properties:
        rate:
          example: "0"
          type: string
        max_rate:
          example: "0"
          type: string
        max_change_rate:
          example: "0"
          type: string
        update_time:
          example: 1970-01-01T00:00:00Z
          type: string
  securitySchemes:
    kms:
      scheme: basic
      type: http
